{
  "clientKey": "3509a0a2b7cc0542af1e697ea16dafe9",
  "href": "https://api-us.boxever.com/v3/flowDefinitions/7cb43630-a958-4b7a-a71e-8eda76068658",
  "ref": "7cb43630-a958-4b7a-a71e-8eda76068658",
  "name": "embedded_{scope}_2d1d7aca95975ca685b29b04907e4298_en",
  "modifiedByRef": "UsQ4dFnLMklHuDXU8acKstHeXEC65tgU@clients",
  "modifiedAt": "2024-09-16T21:04:26.499Z",
  "revision": 28,
  "archived": false,
  "friendlyId": "embedded_{scope}_2d1d7aca95975ca685b29b04907e4298_en",
  "type": "INTERACTIVE_API_FLOW",
  "subtype": "EXPERIENCE",
  "channels": [
    "WEB"
  ],
  "triggers": [],
  "dashboardLinks": [],
  "tags": [],
  "businessProcess": "interactive_v1",
  "traffic": {
    "type": "audienceTraffic",
    "weightingAlgorithm": "USER_DEFINED",
    "modifiedAt": "2024-09-16T21:04:26.537Z",
    "splits": [
      {
        "template": "{\"variantId\": \"445bdf88528b4f90a9553c836d119d04\"}",
        "variantName": "Completed Questionnaire",
        "audienceName": "Completed Questionnaire",
        "conditionGroups": [
          {
            "conditions": [
              {
                "templateId": "completed_questionnaire",
                "params": {}
              }
            ]
          }
        ]
      },
      {
        "template": "{\"variantId\": \"a0a8719487ed408c9ea80b39033b3619\"}",
        "variantName": "Persona",
        "audienceName": "Persona",
        "conditionGroups": [
          {
            "conditions": [
              {
                "templateId": "device",
                "params": {
                  "is": "is",
                  "device type(s)": "mobile"
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "variants": [],
  "transpiledVariants": [
    {
      "ref": "3f6b372a-328b-496f-9661-955b948a6c8a",
      "name": "Persona",
      "tasks": [
        {
          "implementation": "templateRenderTask",
          "input": {
            "inputType": "templateRenderTaskInput",
            "type": "application/json",
            "template": "{\"variantId\": \"a0a8719487ed408c9ea80b39033b3619\"}"
          }
        },
        {
          "implementation": "conditionsTask",
          "input": {
            "inputType": "conditionsTaskInput",
            "rules": [
              {
                "id": "scriptCondition",
                "name": "Combined condition groups",
                "description": "Combined templates within condition group for targeted experience",
                "ruleData": {
                  "expression": "(function () {\n    load(\"classpath:ua-parser.js\");\n    var comparator = \"is\";\n    var deviceTypes = \"mobile\";\n    var deviceTypesArray = deviceTypes.toLowerCase().split(',');\n    var desktopOSTypes = ['Mac OS', 'Windows', 'Ubuntu', 'Unix', 'Linux', 'Chromium OS'];\n    var deviceMatch = false;\n\n    if (request && request.requestDetails && request.requestDetails.headers && request.requestDetails.headers['User-Agent']) {\n        var parser = new UAParser();\n        parser.setUA(request.requestDetails.headers['User-Agent']);\n        var uaParsed = parser.getResult();\n        if (uaParsed.device.type) {\n            var deviceType = uaParsed.device.type.toLowerCase();\n            if (deviceType !== 'mobile' && deviceType !== 'tablet') {\n                deviceMatch = deviceTypesArray.indexOf('other') >= 0;\n            } else {\n                for (var k = 0; k < deviceTypesArray.length; k++) {\n                    if (deviceType === deviceTypesArray[k].toLowerCase()) {\n                        deviceMatch = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            var device = 'other';\n            if (uaParsed.os.name) {\n                for (var i = 0; i < desktopOSTypes.length; i++) {\n                    if (uaParsed.os.name.toLowerCase() === desktopOSTypes[i].toLowerCase()) {\t\n                        device = 'desktop';\n                        break;\n                    }\n                }\n            }\n            deviceMatch = deviceTypesArray.indexOf(device) >= 0;\n        }\n    }\n    \n    return (comparator === \"is\") && deviceMatch || (comparator === \"is not\") && !deviceMatch;\n})();"
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "status": "PRODUCTION",
  "schedule": {
    "type": "simpleSchedule",
    "startDate": "2024-07-23T17:05:22.235Z"
  },
  "revisions": {
    "href": "https://api-us.boxever.com/v3/flowDefinitions/7cb43630-a958-4b7a-a71e-8eda76068658/revisions"
  },
  "sampleSizeConfig": {
    "baseValue": 0.15,
    "minimumDetectableDifference": 0.02,
    "confidenceLevel": 0.95
  },
  "notificationEnabled": false
}
